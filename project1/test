
(int c) void putchar

class String
    int[] bytes

(int[] arr, int length) void reverseArray ->
    int index = 0

    while index < length/2
        int c = arr[index]
        arr[index] = arr[length - index - 1]
        arr[length - index - 1] = c

        index++

(int num) void printNumber ->
    int[] buffer = new int[16]

    int i = 0
    int j = 0

    if num == 0
        putchar(48)
        return


    int cur = num

    while cur != 0
        buffer[i] = cur % 10 + 48
        cur = cur / 10
        i++

    reverseArray(buffer, i)

    while j < i
        putchar(buffer[j])
        j++


(Point p1, Point p2) int scalar ->
    return p1.x * p2.x + p1.y * p2.y

class Point
    int x
    int y

    (int x, int y) ->
        this.x = x
        this.y = y

    () int getX ->
        return this.x

    (int x) void setX ->
        this.x = x

() int main ->
    int i1 = 0
    int i2 = 0

    int size1 = 4
    int size2 = 4

    Point[][] array = new Point[size1][size2]

    while i1 < size1
        i2 = 0

        while i2 < size2
            array[i1][i2] = new Point(i1, i2)

            printNumber(array[i1][i2].x)
            putchar(32)
            printNumber(array[i1][i2].y)
            putchar(10)

            i2++

        i1++

    return scalar(array[2][2], array[size1-1][size2-1])
