import sort.quick.quickSort

class Square : Rectangle

    (float a) ->
        a = a

    () float area ->
        return a * a

    () float perimeter ->
        return a * 4

class Rectangle : Parallelogram
    () float area ->
        return a * b

class Parallelogram : Shape
    float a
    float b
    float sin

    () float perimeter ->
        return a * 2 + b * 2

    () float area ->
        return a * b * sin

interface Shape
    () float perimeter
    () float area


() int main ->
    int size = 100
    int[] a = int[size]
    int i = 0

    while i < size
        a[i] = size - i
        i++

    quickSort(a, 0, size - 1)

    return 0
